name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Test Backend
        run: |
          cd back
          mvn clean test -U

      - name: Generate Coverage Report
        run: |
          cd back
          mvn jacoco:report -U

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./back/target/site/jacoco/
          flags: backend
          name: backend-coverage

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install Frontend Dependencies
        run: |
          cd front
          npm ci

      - name: Test Frontend
        run: |
          cd front
          npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./front/coverage/
          flags: frontend
          name: frontend-coverage

  sonar-analysis:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_ORGANIZATION: dorian
        run: |
          cd back
          mvn -B verify -U org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184:sonar

  build-and-push:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./front
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
